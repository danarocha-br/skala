{"version":3,"file":"index.bde7a665.js","sources":["../../src/components/TokensTable/index.tsx"],"sourcesContent":["import { Box, Text } from '@skala/react';\nimport './styles.css';\n\ntype TokensTableProps = {\n  tokens: Record<string, string>;\n  type?: 'spacing' | 'shadow' | 'general' | 'radii';\n  unity?: 'px' | 'rem' | 'none';\n};\n\nexport function TokensTable({\n  tokens,\n  unity = 'rem',\n  type = 'general',\n}: TokensTableProps) {\n  return (\n    <Box\n      css={{\n        my: '$spacing-6',\n        border: '1px solid',\n        borderColor: '$color-neutral-400',\n        borderRadius: '$radii-md !important',\n      }}\n    >\n      <Box as=\"table\" className=\"tokens-table\" css={{}}>\n        <Box as=\"thead\" css={{}}>\n          <Box\n            as=\"tr\"\n            css={{\n              '& th': {\n                color: '$color-neutral-500',\n                opacity: 0.8,\n                fontSize: '$font-size-xs',\n                letterSpacing: '1.3px',\n                textTransform: 'uppercase',\n                borderBottom: '2px solid $color-neutral-200',\n              },\n            }}\n          >\n            <th>Name</th>\n            {type === 'spacing' && <th />}\n            {type === 'radii' && <th />}\n            <th>{unity !== 'none' ? 'Pixel' : 'Value'}</th>\n            {unity !== 'none' && <th>Rem</th>}\n          </Box>\n        </Box>\n\n        <tbody>\n          {Object.entries(tokens).map(([key, value]) => {\n            return (\n              <Box\n                as=\"tr\"\n                key={key}\n                css={{\n                  color: '$color-neutral-600',\n                  borderBottom: '1px solid',\n                  borderColor: '$color-neutral-200',\n                  '&:nth-child(even) td': {\n                    // backgroundColor: '$color-neutral-100',\n                  },\n                }}\n              >\n                <Box as=\"td\">\n                  <Text\n                    size=\"sm\"\n                    color=\"danger\"\n                    css={{\n                      bg: '$color-neutral-200',\n                      borderRadius: '$radii-sm',\n                      w: 'fit-content',\n                      px: '$3',\n                    }}\n                  >\n                    ${key}\n                  </Text>\n                </Box>\n\n                {type === 'spacing' && (\n                  <td>\n                    <Box\n                      css={{\n                        bg: '$color-neutral-200',\n                        height: '$spacing-5',\n                        width: value,\n                      }}\n                    />\n                  </td>\n                )}\n\n                {/* {type === 'shadow' && (\n                <td>\n                  <div\n                    style={{\n                      backgroundColor: 'white',\n                      height: 24,\n                      width: value,\n                      boxShadow: value,\n                    }}\n                  ></div>\n                </td>\n              )} */}\n\n                {type === 'radii' && (\n                  <td>\n                    <Box\n                      css={{\n                        bg: '$color-neutral-200',\n                        height: '$spacing-5',\n                        width: key !== 'circle' ? 64 : 32,\n                        borderRadius: value,\n                      }}\n                    />\n                  </td>\n                )}\n\n                <td>{value}</td>\n\n                {unity !== 'none' && (\n                  <td>\n                    {unity !== 'rem'\n                      ? Number(value.replace('px', '')) / 16 + 'rem'\n                      : Number(value.replace('rem', '')) * 16 + 'px'}\n                  </td>\n                )}\n              </Box>\n            );\n          })}\n        </tbody>\n      </Box>\n    </Box>\n  );\n}\n"],"names":["TokensTable","tokens","type","_jsx","Box","_jsxs","unity","key","value","Text","__name"],"mappings":"sLASO,SAAAA,EAAA,CAAqB,OAAAC,EAC1BA,MAAAA,EAAAA,MACQ,KAAAC,EAAA,SAEQ,EAAA,CAChB,OAAAC,EAAAC,EAAA,CACM,IAAA,CACG,GAAA,aACC,OAAA,YACI,YAAA,qBACK,aAAA,sBACC,EAChB,SAAAC,EAAAD,EAAA,CAEI,GAAA,QAAI,UAAA,eAAkB,IAAA,CAAA,EAAqB,SAAA,CAAAD,EAAAC,EAAA,CACzC,GAAA,QAAI,IAAA,CAAA,EAAc,SAAAC,EAAAD,EAAA,CAChB,GAAA,KACC,IAAA,CACE,OAAA,CACK,MAAA,qBACC,QAAA,GACE,SAAA,gBACC,cAAA,QACK,cAAA,YACA,aAAA,8BACD,CAChB,EACF,SAAA,CAAAD,EAAA,KAAA,CAEA,SAAA,MAAA,CAAA,EAAAD,IAAA,WAAAC,EAAA,KAAA,CAAA,CAAA,EAAAD,IAAA,SAAAC,EAAA,KAAA,CAAA,CAAA,EAAAA,EAAA,KAAA,CAGA,SAAAG,IAAA,OAAA,QAAA,OAAkC,CAAA,EAAAA,IAAA,QAAAH,EAAA,KAAA,CACb,SAAA,KAAA,CAAA,CAAA,CAAY,CAAA,CAAA,CAAA,EAAAA,EAAA,QAAA,CAIrC,SAAA,OAAA,QAAAF,CAAA,EAAA,IAAA,CAAA,CAAAM,EAAAC,CAAA,IAEIH,EAAAD,EAAA,CACM,GAAA,KACC,IAAA,CAEE,MAAA,qBACI,aAAA,YACO,YAAA,qBACD,uBAAA,CAAA,CAEX,EAEJ,SAAA,CAAAD,EAAAC,EAAA,CAEI,GAAA,KAAI,SAAAC,EAAAI,EAAA,CACD,KAAA,KACE,MAAA,SACC,IAAA,CACD,GAAA,qBACC,aAAA,YACU,EAAA,cACX,GAAA,IACC,EACN,SAAA,CAAA,IAAAF,CAAA,CAEK,CAAA,CAAA,CAAA,EAAAL,IAAA,WAAAC,EAAA,KAAA,CAKP,SAAAA,EAAAC,EAAA,CACM,IAAA,CACG,GAAA,qBACC,OAAA,aACI,MAAAI,CACDA,CACT,CAAA,CAAE,CAAA,EAAAN,IAAA,SAAAC,EAAA,KAAA,CAmBN,SAAAA,EAAAC,EAAA,CACM,IAAA,CACG,GAAA,qBACC,OAAA,aACI,MAAAG,IAAA,SAAA,GAAA,GACuB,aAAAC,CACjBA,CAChB,CAAA,CAAE,CAAA,EAAAL,EAAA,KAAA,CAKR,SAAAK,CAAKA,CAAAA,EAAAA,IAAAA,QAAAA,EAAAA,KAAAA,CAGH,SAAAF,IAAA,MAAA,OAAAE,EAAA,QAAA,KAAA,EAAA,CAAA,EAAA,GAAA,MAAA,OAAAA,EAAA,QAAA,MAAA,EAAA,CAAA,EAAA,GAAA,IAG8C,CAAA,CAAA,CAE/C,EAAAD,CAAA,CAvEO,CA0Eb,CAAA,CAAA,CACK,CAAA,CAAA,CAAA,CAIhB,CAzHOG,EAAAV,EAAA"}